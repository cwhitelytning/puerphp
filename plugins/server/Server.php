<?php namespace plugins\server;

include_once('src/Status.inc');
include_once('src/Headers.inc');
include_once('src/Methods.inc');
include_once('src/Content.inc');
include_once('src/Response.inc');

use core\src\module\ModuleInfo;
use core\src\plugin\Plugin;
use plugins\server\src\Content;
use plugins\server\src\Headers;
use plugins\server\src\Response;
use plugins\server\src\Status;

#[
  ModuleInfo
  (
    name: 'Server',
    author: 'Clay Whitelytning',
    version: '1.1.3',
    description: 'Simple non-configurable server'
  )
]
class Server extends Plugin
{
  /**
   * Contains a response generated by other modules.
   * @var Response
   */
  private Response $response;

  /**
   * Server initialization.
   * @return void
   */
  public function onModuleInit(): void
  {
    $this->response = new Response(new Status(Status::HTTP_NOT_FOUND), new Headers(), new Content());
  }

  /**
   * Unloading the server.
   * @return void
   */
  public function onModuleEnd(): void
  {
    http_response_code($this->response->getStatus()->getCode());
    if ($headers = $this->response->getHeaders()->toStrings()) {
      foreach ($headers as $header) header($header);
    }
    echo $this->response->getContent();
  }
}